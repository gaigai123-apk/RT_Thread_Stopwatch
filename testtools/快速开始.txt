╔══════════════════════════════════════════════════════════════╗
║                                                              ║
║   RT-Thread Stopwatch 自动化测试 - 快速开始指南             ║
║                                                              ║
╚══════════════════════════════════════════════════════════════╝

🎯 目的
──────────────────────────────────────────────────────────────
自动测试项目所有功能，获得真实的性能数据，用于填写简历和面试准备。


📋 测试项目
──────────────────────────────────────────────────────────────
✓ 计时精度    - 误差 < 5 ms/分钟
✓ 圈速功能    - 容量 20 圈
✓ CSV周期     - 稳定性 ≥100ms
✓ 命令响应    - 全部命令测试
✓ 长时间运行  - 5分钟稳定性


🚀 在 Git Bash 中执行（推荐）
══════════════════════════════════════════════════════════════

步骤1: 打开 Git Bash

步骤2: 进入目录
  cd /d/RT-ThreadStudio/workspace/6/testtools

步骤3: 赋予执行权限（仅第一次需要）
  chmod +x run_test.sh

步骤4: 运行测试
  ./run_test.sh

步骤5: 按提示操作
  - 输入串口号（如 COM5）
  - 选择测试类型
  - 等待测试完成

步骤6: 查看结果
  - 终端显示测试结果
  - 生成 JSON 报告文件


⚡ 快速命令（直接运行Python）
══════════════════════════════════════════════════════════════

完整测试（约10分钟）：
  
  cd /d/RT-ThreadStudio/workspace/6/testtools
  python stopwatch_autotest.py --port COM5 --tests all \
      --output ../test_results.json


快速测试（约2分钟）：
  
  python stopwatch_autotest.py --port COM5 --tests timing csv \
      --timing-duration 30 --csv-duration 10 \
      --output ../test_quick.json


单项测试：
  
  # 只测计时精度（1分钟）
  python stopwatch_autotest.py --port COM5 --tests timing \
      --timing-duration 60
  
  # 只测CSV周期（15秒）
  python stopwatch_autotest.py --port COM5 --tests csv \
      --csv-period 100 --csv-duration 15


📊 测试结果示例
══════════════════════════════════════════════════════════════

✅ 通过: 4/5 项测试
📈 通过率: 80.0%

📝 简历数据建议：

计时误差: 133.3 ppm (< 1分钟内 8 ms)
圈速容量: 20 圈
CSV周期: ≥100 ms (抖动 2.1%)


⚠️ 测试前准备
══════════════════════════════════════════════════════════════

必需条件：
  ✓ 开发板已连接到电脑（USB线）
  ✓ 开发板正在运行固件
  ✓ 串口驱动已安装（CH340）
  ✓ Python 已安装
  ✓ pyserial 已安装（pip install pyserial）

检查串口号：
  Windows: 设备管理器 → 端口(COM和LPT) → 查看 COM5
  Linux:   ls /dev/ttyUSB* 或 /dev/ttyACM*


❓ 常见问题
══════════════════════════════════════════════════════════════

Q: 找不到 COM 口？
A: 打开设备管理器，确认串口号，关闭其他串口工具

Q: 提示缺少 pyserial？
A: 执行 pip install pyserial

Q: 测试超时？
A: 检查开发板是否运行，串口是否被占用

Q: Git Bash 路径错误？
A: 使用 /d/路径格式，有空格用引号

Q: 想改串口号？
A: 修改命令中的 --port COM5 为实际端口


📁 输出文件
══════════════════════════════════════════════════════════════

测试报告会保存在上级目录：
  
  ../test_results_20251029_143025.json  (完整测试)
  ../test_quick_20251029_143025.json    (快速测试)

可用于：
  • 填写简历数据
  • 面试时展示
  • 项目文档归档


🎓 下一步
══════════════════════────────────────────────────────────────

1. 运行测试，获得真实数据
2. 查看生成的 JSON 报告
3. 更新简历中的性能指标
4. 准备面试说明材料
5. （可选）保存测试视频/截图


📖 详细文档
══════════════════════════════════════════════════════════════

查看完整说明：
  
  testtools/README.md


═══════════════════════════════════════════════════════════════

准备好了吗？在 Git Bash 中运行：

  cd /d/RT-ThreadStudio/workspace/6/testtools
  chmod +x run_test.sh
  ./run_test.sh

═══════════════════════════════════════════════════════════════




